import "pkg:/source/enums/ColorPalette.bs"
import "pkg:/source/enums/KeyCode.bs"
import "pkg:/source/utils/misc.bs"

sub init()
    m.top.optionsAvailable = false
    setupMainNode()

    m.instantMix = m.top.findNode("instantMix")
    m.albumCover = m.top.findNode("albumCover")
    m.songList = m.top.findNode("songList")
    m.infoGroup = m.top.FindNode("infoGroup")
    m.songListRect = m.top.FindNode("songListRect")
    m.top.lastFocus = m.songList

    m.songList.observeField("doneLoading", "onDoneLoading")

    m.dscr = m.top.findNode("overview")
    m.dscr.ellipsisText = tr("... (Press * to read more)")
end sub

sub setupMainNode()
    main = m.top.findNode("toplevel")
    main.translation = [96, 175]
end sub

' Set values for displayed values on screen
sub pageContentChanged()
    item = m.top.pageContent

    setPosterImage(item.posterURL)
    setScreenTitle(item.json)
    setOnScreenTextValues(item.json)
end sub

' Set poster image on screen
sub setPosterImage(posterURL)
    if isValid(posterURL)
        m.albumCover.uri = posterURL
    end if
end sub

' Set screen's title text
sub setScreenTitle(json)
    newTitle = ""
    if isValid(json)
        if isValid(json.AlbumArtist)
            newTitle = json.AlbumArtist
        end if
        if isValid(json.AlbumArtist) and isValid(json.name)
            newTitle = newTitle + " / "
        end if
        if isValid(json.name)
            newTitle = newTitle + json.name
        end if
    end if
    m.top.overhangTitle = newTitle
end sub

' Adjust scene by removing overview node and showing more songs
sub adjustScreenForNoOverview()
    m.infoGroup.removeChild(m.dscr)
    m.songListRect.height = 800
    m.songList.numRows = 12
end sub

' Populate on screen text variables
sub setOnScreenTextValues(json)
    if isValid(json)
        if isValid(json.overview) and json.overview <> ""
            ' We have overview text
            setFieldTextValue("overview", json.overview)
        else
            ' We don't have overview text
            adjustScreenForNoOverview()
        end if

        setFieldTextValue("numberofsongs", stri(json.ChildCount) + " Tracks")

        if type(json.ProductionYear) = "roInt"
            setFieldTextValue("released", "Released " + stri(json.ProductionYear))
        end if

        if json.genres.count() > 0
            setFieldTextValue("genres", json.genres.join(", "))
        end if

        if type(json.RunTimeTicks) = "LongInteger"
            setFieldTextValue("runtime", stri(getMinutes(json.RunTimeTicks)) + " mins")
        end if
    end if
end sub

function onKeyEvent(key as string, press as boolean) as boolean
    if not press then return false

    if key = KeyCode.OPTIONS
        if m.dscr.isTextEllipsized
            createFullDscrDlg()
            return true
        end if
        return false
    end if

    if key = KeyCode.RIGHT
        if m.instantMix.hasFocus()
            m.top.lastFocus = m.songList
            m.songList.setFocus(true)
            group = m.global.sceneManager.callFunc("getActiveScene")
            group.lastFocus = m.songList
            return true
        end if
    else if key = KeyCode.LEFT and m.songList.hasFocus()
        if m.instantMix.visible
            m.top.lastFocus = m.instantMix
            m.instantMix.setFocus(true)
            group = m.global.sceneManager.callFunc("getActiveScene")
            group.lastFocus = m.instantMix
        else
            return false
        end if
        return true
    end if

    return false
end function

sub createFullDscrDlg()
    if isAllValid([m.top.overhangTitle, m.dscr.text])
        m.global.sceneManager.callFunc("standardDialog", m.top.overhangTitle, { data: ["<p>" + m.dscr.text + "</p>"] })
    end if
end sub

sub onDoneLoading()
    m.songList.unobservefield("doneLoading")
    stopLoadingSpinner()
end sub
